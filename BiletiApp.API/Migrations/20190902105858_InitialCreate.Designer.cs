// <auto-generated />
using System;
using BiletiApp.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BiletiApp.API.Migrations
{
    [DbContext(typeof(BiletiDbContext))]
    [Migration("20190902105858_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BiletiApp.API.Models.BiletiEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cover");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("Max_tickets_per_account");

                    b.Property<string>("Name");

                    b.Property<int>("OrganizationId");

                    b.Property<Guid?>("OrganizationId1");

                    b.Property<int>("VenueId");

                    b.Property<Guid?>("VenueId1");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId1");

                    b.HasIndex("VenueId1");

                    b.ToTable("BiletiEvent","Bileti");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Forname");

                    b.Property<Guid?>("OrganizationId");

                    b.Property<string>("Surname");

                    b.Property<string>("Telephone");

                    b.Property<Guid?>("VenueId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("VenueId");

                    b.ToTable("Contact","Bileti");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BiletiEventId");

                    b.Property<Guid?>("OrganizationId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("BiletiEventId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cover");

                    b.Property<string>("Description");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Seat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Enabled");

                    b.Property<int>("Number");

                    b.Property<int>("Row");

                    b.Property<int>("SectorId");

                    b.Property<Guid?>("SectorId1");

                    b.HasKey("Id");

                    b.HasIndex("SectorId1");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<string>("Label");

                    b.Property<string>("Name");

                    b.Property<int>("Rows");

                    b.Property<bool>("Seated");

                    b.Property<Guid?>("VenueId");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BiletiEventId");

                    b.Property<string>("Label");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("BiletiEventId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("BiletiApp.API.Models.BiletiEvent", b =>
                {
                    b.HasOne("BiletiApp.API.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId1");

                    b.HasOne("BiletiApp.API.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueId1");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Contact", b =>
                {
                    b.HasOne("BiletiApp.API.Models.Organization")
                        .WithMany("Contacts")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("BiletiApp.API.Models.Venue")
                        .WithMany("Contacts")
                        .HasForeignKey("VenueId");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Image", b =>
                {
                    b.HasOne("BiletiApp.API.Models.BiletiEvent")
                        .WithMany("Images")
                        .HasForeignKey("BiletiEventId");

                    b.HasOne("BiletiApp.API.Models.Organization")
                        .WithMany("Gallery")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Seat", b =>
                {
                    b.HasOne("BiletiApp.API.Models.Sector", "Sector")
                        .WithMany("Seats")
                        .HasForeignKey("SectorId1");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Sector", b =>
                {
                    b.HasOne("BiletiApp.API.Models.Venue")
                        .WithMany("Sectors")
                        .HasForeignKey("VenueId");
                });

            modelBuilder.Entity("BiletiApp.API.Models.Tag", b =>
                {
                    b.HasOne("BiletiApp.API.Models.BiletiEvent")
                        .WithMany("Tags")
                        .HasForeignKey("BiletiEventId");
                });
#pragma warning restore 612, 618
        }
    }
}
